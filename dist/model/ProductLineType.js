"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner = _interopRequireDefault(require("./InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner"));
var _ProductLineTypeSerialnumberdetailsInner = _interopRequireDefault(require("./ProductLineTypeSerialnumberdetailsInner"));
var _ProductLineTypeTrackingnumberdetailsInner = _interopRequireDefault(require("./ProductLineTypeTrackingnumberdetailsInner"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The ProductLineType model module.
 * @module model/ProductLineType
 * @version 1.0.0
 */
var ProductLineType = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ProductLineType</code>.
   * Product line items object under each invoice
   * @alias module:model/ProductLineType
   */
  function ProductLineType() {
    _classCallCheck(this, ProductLineType);
    ProductLineType.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(ProductLineType, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>ProductLineType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductLineType} obj Optional instance to populate.
     * @return {module:model/ProductLineType} The populated <code>ProductLineType</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ProductLineType();
        if (data.hasOwnProperty('linenumber')) {
          obj['linenumber'] = _ApiClient["default"].convertToType(data['linenumber'], 'String');
        }
        if (data.hasOwnProperty('linetype')) {
          obj['linetype'] = _ApiClient["default"].convertToType(data['linetype'], 'String');
        }
        if (data.hasOwnProperty('partnumber')) {
          obj['partnumber'] = _ApiClient["default"].convertToType(data['partnumber'], 'String');
        }
        if (data.hasOwnProperty('vendorpartnumber')) {
          obj['vendorpartnumber'] = _ApiClient["default"].convertToType(data['vendorpartnumber'], 'String');
        }
        if (data.hasOwnProperty('partdescription')) {
          obj['partdescription'] = _ApiClient["default"].convertToType(data['partdescription'], 'String');
        }
        if (data.hasOwnProperty('shipfrombranch')) {
          obj['shipfrombranch'] = _ApiClient["default"].convertToType(data['shipfrombranch'], 'String');
        }
        if (data.hasOwnProperty('shippedquantity')) {
          obj['shippedquantity'] = _ApiClient["default"].convertToType(data['shippedquantity'], 'String');
        }
        if (data.hasOwnProperty('orderedquantity')) {
          obj['orderedquantity'] = _ApiClient["default"].convertToType(data['orderedquantity'], 'String');
        }
        if (data.hasOwnProperty('marginpercent')) {
          obj['marginpercent'] = _ApiClient["default"].convertToType(data['marginpercent'], 'String');
        }
        if (data.hasOwnProperty('backorderquantity')) {
          obj['backorderquantity'] = _ApiClient["default"].convertToType(data['backorderquantity'], 'String');
        }
        if (data.hasOwnProperty('backorderetadate')) {
          obj['backorderetadate'] = _ApiClient["default"].convertToType(data['backorderetadate'], 'Date');
        }
        if (data.hasOwnProperty('extendedprice')) {
          obj['extendedprice'] = _ApiClient["default"].convertToType(data['extendedprice'], 'String');
        }
        if (data.hasOwnProperty('specialbidnumber')) {
          obj['specialbidnumber'] = _ApiClient["default"].convertToType(data['specialbidnumber'], 'String');
        }
        if (data.hasOwnProperty('ordersuffix')) {
          obj['ordersuffix'] = _ApiClient["default"].convertToType(data['ordersuffix'], 'String');
        }
        if (data.hasOwnProperty('isacopapplied')) {
          obj['isacopapplied'] = _ApiClient["default"].convertToType(data['isacopapplied'], 'String');
        }
        if (data.hasOwnProperty('unitprice')) {
          obj['unitprice'] = _ApiClient["default"].convertToType(data['unitprice'], 'String');
        }
        if (data.hasOwnProperty('unitofmeasure')) {
          obj['unitofmeasure'] = _ApiClient["default"].convertToType(data['unitofmeasure'], 'String');
        }
        if (data.hasOwnProperty('serialnumberdetails')) {
          obj['serialnumberdetails'] = _ApiClient["default"].convertToType(data['serialnumberdetails'], [_ProductLineTypeSerialnumberdetailsInner["default"]]);
        }
        if (data.hasOwnProperty('trackingnumberdetails')) {
          obj['trackingnumberdetails'] = _ApiClient["default"].convertToType(data['trackingnumberdetails'], [_ProductLineTypeTrackingnumberdetailsInner["default"]]);
        }
        if (data.hasOwnProperty('productextendedspecs')) {
          obj['productextendedspecs'] = _ApiClient["default"].convertToType(data['productextendedspecs'], [_InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner["default"]]);
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductLineType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductLineType</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['linenumber'] && !(typeof data['linenumber'] === 'string' || data['linenumber'] instanceof String)) {
        throw new Error("Expected the field `linenumber` to be a primitive type in the JSON string but got " + data['linenumber']);
      }
      // ensure the json data is a string
      if (data['linetype'] && !(typeof data['linetype'] === 'string' || data['linetype'] instanceof String)) {
        throw new Error("Expected the field `linetype` to be a primitive type in the JSON string but got " + data['linetype']);
      }
      // ensure the json data is a string
      if (data['partnumber'] && !(typeof data['partnumber'] === 'string' || data['partnumber'] instanceof String)) {
        throw new Error("Expected the field `partnumber` to be a primitive type in the JSON string but got " + data['partnumber']);
      }
      // ensure the json data is a string
      if (data['vendorpartnumber'] && !(typeof data['vendorpartnumber'] === 'string' || data['vendorpartnumber'] instanceof String)) {
        throw new Error("Expected the field `vendorpartnumber` to be a primitive type in the JSON string but got " + data['vendorpartnumber']);
      }
      // ensure the json data is a string
      if (data['partdescription'] && !(typeof data['partdescription'] === 'string' || data['partdescription'] instanceof String)) {
        throw new Error("Expected the field `partdescription` to be a primitive type in the JSON string but got " + data['partdescription']);
      }
      // ensure the json data is a string
      if (data['shipfrombranch'] && !(typeof data['shipfrombranch'] === 'string' || data['shipfrombranch'] instanceof String)) {
        throw new Error("Expected the field `shipfrombranch` to be a primitive type in the JSON string but got " + data['shipfrombranch']);
      }
      // ensure the json data is a string
      if (data['shippedquantity'] && !(typeof data['shippedquantity'] === 'string' || data['shippedquantity'] instanceof String)) {
        throw new Error("Expected the field `shippedquantity` to be a primitive type in the JSON string but got " + data['shippedquantity']);
      }
      // ensure the json data is a string
      if (data['orderedquantity'] && !(typeof data['orderedquantity'] === 'string' || data['orderedquantity'] instanceof String)) {
        throw new Error("Expected the field `orderedquantity` to be a primitive type in the JSON string but got " + data['orderedquantity']);
      }
      // ensure the json data is a string
      if (data['marginpercent'] && !(typeof data['marginpercent'] === 'string' || data['marginpercent'] instanceof String)) {
        throw new Error("Expected the field `marginpercent` to be a primitive type in the JSON string but got " + data['marginpercent']);
      }
      // ensure the json data is a string
      if (data['backorderquantity'] && !(typeof data['backorderquantity'] === 'string' || data['backorderquantity'] instanceof String)) {
        throw new Error("Expected the field `backorderquantity` to be a primitive type in the JSON string but got " + data['backorderquantity']);
      }
      // ensure the json data is a string
      if (data['extendedprice'] && !(typeof data['extendedprice'] === 'string' || data['extendedprice'] instanceof String)) {
        throw new Error("Expected the field `extendedprice` to be a primitive type in the JSON string but got " + data['extendedprice']);
      }
      // ensure the json data is a string
      if (data['specialbidnumber'] && !(typeof data['specialbidnumber'] === 'string' || data['specialbidnumber'] instanceof String)) {
        throw new Error("Expected the field `specialbidnumber` to be a primitive type in the JSON string but got " + data['specialbidnumber']);
      }
      // ensure the json data is a string
      if (data['ordersuffix'] && !(typeof data['ordersuffix'] === 'string' || data['ordersuffix'] instanceof String)) {
        throw new Error("Expected the field `ordersuffix` to be a primitive type in the JSON string but got " + data['ordersuffix']);
      }
      // ensure the json data is a string
      if (data['isacopapplied'] && !(typeof data['isacopapplied'] === 'string' || data['isacopapplied'] instanceof String)) {
        throw new Error("Expected the field `isacopapplied` to be a primitive type in the JSON string but got " + data['isacopapplied']);
      }
      // ensure the json data is a string
      if (data['unitprice'] && !(typeof data['unitprice'] === 'string' || data['unitprice'] instanceof String)) {
        throw new Error("Expected the field `unitprice` to be a primitive type in the JSON string but got " + data['unitprice']);
      }
      // ensure the json data is a string
      if (data['unitofmeasure'] && !(typeof data['unitofmeasure'] === 'string' || data['unitofmeasure'] instanceof String)) {
        throw new Error("Expected the field `unitofmeasure` to be a primitive type in the JSON string but got " + data['unitofmeasure']);
      }
      if (data['serialnumberdetails']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['serialnumberdetails'])) {
          throw new Error("Expected the field `serialnumberdetails` to be an array in the JSON data but got " + data['serialnumberdetails']);
        }
        // validate the optional field `serialnumberdetails` (array)
        var _iterator = _createForOfIteratorHelper(data['serialnumberdetails']),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            _ProductLineTypeSerialnumberdetailsInner["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        ;
      }
      if (data['trackingnumberdetails']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['trackingnumberdetails'])) {
          throw new Error("Expected the field `trackingnumberdetails` to be an array in the JSON data but got " + data['trackingnumberdetails']);
        }
        // validate the optional field `trackingnumberdetails` (array)
        var _iterator2 = _createForOfIteratorHelper(data['trackingnumberdetails']),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _item = _step2.value;
            _ProductLineTypeTrackingnumberdetailsInner["default"].validateJSON(_item);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        ;
      }
      if (data['productextendedspecs']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['productextendedspecs'])) {
          throw new Error("Expected the field `productextendedspecs` to be an array in the JSON data but got " + data['productextendedspecs']);
        }
        // validate the optional field `productextendedspecs` (array)
        var _iterator3 = _createForOfIteratorHelper(data['productextendedspecs']),
          _step3;
        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var _item2 = _step3.value;
            _InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner["default"].validateJSON(_item2);
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
        ;
      }
      return true;
    }
  }]);
  return ProductLineType;
}();
/**
 * @member {String} linenumber
 */
ProductLineType.prototype['linenumber'] = undefined;

/**
 * @member {String} linetype
 */
ProductLineType.prototype['linetype'] = undefined;

/**
 * @member {String} partnumber
 */
ProductLineType.prototype['partnumber'] = undefined;

/**
 * @member {String} vendorpartnumber
 */
ProductLineType.prototype['vendorpartnumber'] = undefined;

/**
 * @member {String} partdescription
 */
ProductLineType.prototype['partdescription'] = undefined;

/**
 * @member {String} shipfrombranch
 */
ProductLineType.prototype['shipfrombranch'] = undefined;

/**
 * @member {String} shippedquantity
 */
ProductLineType.prototype['shippedquantity'] = undefined;

/**
 * @member {String} orderedquantity
 */
ProductLineType.prototype['orderedquantity'] = undefined;

/**
 * @member {String} marginpercent
 */
ProductLineType.prototype['marginpercent'] = undefined;

/**
 * @member {String} backorderquantity
 */
ProductLineType.prototype['backorderquantity'] = undefined;

/**
 * @member {Date} backorderetadate
 */
ProductLineType.prototype['backorderetadate'] = undefined;

/**
 * @member {String} extendedprice
 */
ProductLineType.prototype['extendedprice'] = undefined;

/**
 * @member {String} specialbidnumber
 */
ProductLineType.prototype['specialbidnumber'] = undefined;

/**
 * @member {String} ordersuffix
 */
ProductLineType.prototype['ordersuffix'] = undefined;

/**
 * @member {String} isacopapplied
 */
ProductLineType.prototype['isacopapplied'] = undefined;

/**
 * @member {String} unitprice
 */
ProductLineType.prototype['unitprice'] = undefined;

/**
 * @member {String} unitofmeasure
 */
ProductLineType.prototype['unitofmeasure'] = undefined;

/**
 * @member {Array.<module:model/ProductLineTypeSerialnumberdetailsInner>} serialnumberdetails
 */
ProductLineType.prototype['serialnumberdetails'] = undefined;

/**
 * @member {Array.<module:model/ProductLineTypeTrackingnumberdetailsInner>} trackingnumberdetails
 */
ProductLineType.prototype['trackingnumberdetails'] = undefined;

/**
 * @member {Array.<module:model/InvoiceDetailResponseServiceresponseInvoicedetailresponseExtendedspecsInner>} productextendedspecs
 */
ProductLineType.prototype['productextendedspecs'] = undefined;
var _default = exports["default"] = ProductLineType;
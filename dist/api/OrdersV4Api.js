"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _OrderCreateRequest = _interopRequireDefault(require("../model/OrderCreateRequest"));
var _OrderCreateResponse = _interopRequireDefault(require("../model/OrderCreateResponse"));
var _OrderDeleteRequest = _interopRequireDefault(require("../model/OrderDeleteRequest"));
var _OrderDeleteResponse = _interopRequireDefault(require("../model/OrderDeleteResponse"));
var _OrderDetailRequest = _interopRequireDefault(require("../model/OrderDetailRequest"));
var _OrderDetailResponse = _interopRequireDefault(require("../model/OrderDetailResponse"));
var _OrderModifyRequest = _interopRequireDefault(require("../model/OrderModifyRequest"));
var _OrderModifyResponse = _interopRequireDefault(require("../model/OrderModifyResponse"));
var _OrderSearchRequest = _interopRequireDefault(require("../model/OrderSearchRequest"));
var _OrderSearchResponse = _interopRequireDefault(require("../model/OrderSearchResponse"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* OrdersV4 service.
* @module api/OrdersV4Api
* @version 1.0.0
*/
var OrdersV4Api = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new OrdersV4Api. 
  * @alias module:api/OrdersV4Api
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function OrdersV4Api(apiClient) {
    _classCallCheck(this, OrdersV4Api);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Callback function to receive the result of the postV4Ordercreate operation.
   * @callback module:api/OrdersV4Api~postV4OrdercreateCallback
   * @param {String} error Error message, if any.
   * @param {module:model/OrderCreateResponse} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Create a new Order
   * The order create transaction is a real-time transaction that allows customers to place standard product and direct ship (licensing and warranties) orders with Ingram Micro using API.
   * @param {Object} opts Optional parameters
   * @param {module:model/OrderCreateRequest} [orderCreateRequest] 
   * @param {module:api/OrdersV4Api~postV4OrdercreateCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/OrderCreateResponse}
   */
  _createClass(OrdersV4Api, [{
    key: "postV4Ordercreate",
    value: function postV4Ordercreate(opts, callback) {
      opts = opts || {};
      var postBody = opts['orderCreateRequest'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _OrderCreateResponse["default"];
      return this.apiClient.callApi('/orders/v4/ordercreate', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the postV4Orderdelete operation.
     * @callback module:api/OrdersV4Api~postV4OrderdeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderDeleteResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an Order
     * A real-time request to delete a previously accepted order must be submitted before the order is released to Ingram Micro’s warehouse. After release the order is no longer eligible for deletion. Order delete transaction submitted after the order is released will be rejected and will not be applied. *Direct ship orders cannot be deleted. Contact your sales rep for assistance.
     * @param {Object} opts Optional parameters
     * @param {module:model/OrderDeleteRequest} [orderDeleteRequest] 
     * @param {module:api/OrdersV4Api~postV4OrderdeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderDeleteResponse}
     */
  }, {
    key: "postV4Orderdelete",
    value: function postV4Orderdelete(opts, callback) {
      opts = opts || {};
      var postBody = opts['orderDeleteRequest'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _OrderDeleteResponse["default"];
      return this.apiClient.callApi('/orders/v4/orderdelete', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the postV4Orderdetails operation.
     * @callback module:api/OrdersV4Api~postV4OrderdetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderDetailResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Order Details
     * A real-time request that allows the customer to query Ingram Micro for detailed information for a specific open or shipped order. Orders are searched using Ingram Micro Sales Order Number.
     * @param {Object} opts Optional parameters
     * @param {module:model/OrderDetailRequest} [orderDetailRequest] 
     * @param {module:api/OrdersV4Api~postV4OrderdetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderDetailResponse}
     */
  }, {
    key: "postV4Orderdetails",
    value: function postV4Orderdetails(opts, callback) {
      opts = opts || {};
      var postBody = opts['orderDetailRequest'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _OrderDetailResponse["default"];
      return this.apiClient.callApi('/orders/v4/orderdetails', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the postV4Ordermodify operation.
     * @callback module:api/OrdersV4Api~postV4OrdermodifyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderModifyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Modify an Existing Order
     * The order modify transaction allows for changes to be made after the order creation process but before the order is released to Ingram Micro’s warehouse system.  Order modify transaction submitted after the order is released will be rejected and will not be applied.  Types of modifications allowable: Order release, add comment, and carrier change. NOTE - Direct Ship orders cannot be modified. 
     * @param {Object} opts Optional parameters
     * @param {module:model/OrderModifyRequest} [orderModifyRequest] 
     * @param {module:api/OrdersV4Api~postV4OrdermodifyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderModifyResponse}
     */
  }, {
    key: "postV4Ordermodify",
    value: function postV4Ordermodify(opts, callback) {
      opts = opts || {};
      var postBody = opts['orderModifyRequest'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _OrderModifyResponse["default"];
      return this.apiClient.callApi('/orders/v4/ordermodify', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the postV4Ordersearch operation.
     * @callback module:api/OrdersV4Api~postV4OrdersearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderSearchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Order Search
     * Search your orders using various search parameters
     * @param {Object} opts Optional parameters
     * @param {module:model/OrderSearchRequest} [orderSearchRequest] 
     * @param {module:api/OrdersV4Api~postV4OrdersearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderSearchResponse}
     */
  }, {
    key: "postV4Ordersearch",
    value: function postV4Ordersearch(opts, callback) {
      opts = opts || {};
      var postBody = opts['orderSearchRequest'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _OrderSearchResponse["default"];
      return this.apiClient.callApi('/orders/v4/orderlookup', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
  }]);
  return OrdersV4Api;
}();
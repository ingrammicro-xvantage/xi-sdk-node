"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _QuoteDetails = _interopRequireDefault(require("../model/QuoteDetails"));
var _QuoteListRequest = _interopRequireDefault(require("../model/QuoteListRequest"));
var _QuoteListResponse = _interopRequireDefault(require("../model/QuoteListResponse"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* QuotesV5 service.
* @module api/QuotesV5Api
* @version 1.0.0
*/
var QuotesV5Api = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new QuotesV5Api. 
  * @alias module:api/QuotesV5Api
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function QuotesV5Api(apiClient) {
    _classCallCheck(this, QuotesV5Api);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Callback function to receive the result of the getV5QuotesDetails operation.
   * @callback module:api/QuotesV5Api~getV5QuotesDetailsCallback
   * @param {String} error Error message, if any.
   * @param {module:model/QuoteDetails} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Get Quote Details
   * The quote details API provides all quote details associated with the quote number provided.   The “<strong>quoteNumber</strong>”, “<strong>isoCountryCode</strong>” and “<strong>customerNumber</strong>” parameters are required.
   * @param {String} quoteNumber Ingram Micro Quote Number
   * @param {String} customerNumber Your Ingram Micro unique customer number
   * @param {String} isoCountryCode 
   * @param {Object} opts Optional parameters
   * @param {String} [thirdPartySource = 'customer')] Unique identifier used to identify the third party source accessing the services
   * @param {module:api/QuotesV5Api~getV5QuotesDetailsCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/QuoteDetails}
   */
  _createClass(QuotesV5Api, [{
    key: "getV5QuotesDetails",
    value: function getV5QuotesDetails(quoteNumber, customerNumber, isoCountryCode, opts, callback) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'quoteNumber' is set
      if (quoteNumber === undefined || quoteNumber === null) {
        throw new Error("Missing the required parameter 'quoteNumber' when calling getV5QuotesDetails");
      }
      // verify the required parameter 'customerNumber' is set
      if (customerNumber === undefined || customerNumber === null) {
        throw new Error("Missing the required parameter 'customerNumber' when calling getV5QuotesDetails");
      }
      // verify the required parameter 'isoCountryCode' is set
      if (isoCountryCode === undefined || isoCountryCode === null) {
        throw new Error("Missing the required parameter 'isoCountryCode' when calling getV5QuotesDetails");
      }
      var pathParams = {
        'quoteNumber': quoteNumber
      };
      var queryParams = {
        'customerNumber': customerNumber,
        'isoCountryCode': isoCountryCode,
        'thirdPartySource': opts['thirdPartySource']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _QuoteDetails["default"];
      return this.apiClient.callApi('/resellers/v5/quote/{quoteNumber}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }

    /**
     * Callback function to receive the result of the postV5QuotesSearch operation.
     * @callback module:api/QuotesV5Api~postV5QuotesSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QuoteListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search Quotes
     * This endpoint enables the retrieval and filtering of relevant quote list key criteria data, such as quote number, special bid numbers, end user name, status, and date ranges from the Ingram Micro system. By default, the Quotes endpoint retrieves quotes modified or created within the last 30 days.   Observe these additional parameters:<ul><li>Only active quotes are available through this API.</li><li>Quotes older than 365 days are excluded by default.</li><li>You can use date range filters to retrieve quotes older than 30 days and up to 365 days.</li><li>Quotes that are in draft and closed states are excluded, and are not accessible through this API.</li></ul>
     * @param {Object} opts Optional parameters
     * @param {module:model/QuoteListRequest} [quoteListRequest] 
     * @param {module:api/QuotesV5Api~postV5QuotesSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QuoteListResponse}
     */
  }, {
    key: "postV5QuotesSearch",
    value: function postV5QuotesSearch(opts, callback) {
      opts = opts || {};
      var postBody = opts['quoteListRequest'];
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _QuoteListResponse["default"];
      return this.apiClient.callApi('/resellers/v5/quote/search', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
  }]);
  return QuotesV5Api;
}();
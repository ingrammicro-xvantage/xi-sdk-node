"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ErrorResponse = _interopRequireDefault(require("../model/ErrorResponse"));
var _InvoiceDetailResponse = _interopRequireDefault(require("../model/InvoiceDetailResponse"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * XI SDK Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* InvoicesV6 service.
* @module api/InvoicesV6Api
* @version 1.0.0
*/
var InvoicesV6Api = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new InvoicesV6Api. 
  * @alias module:api/InvoicesV6Api
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function InvoicesV6Api(apiClient) {
    _classCallCheck(this, InvoicesV6Api);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Callback function to receive the result of the getInvoicedetailsV6 operation.
   * @callback module:api/InvoicesV6Api~getInvoicedetailsV6Callback
   * @param {String} error Error message, if any.
   * @param {module:model/InvoiceDetailResponse} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Get Invoice Details v6
   * Use your Ingram Micro invoice number to search for existing invoices or retrieve existing invoice details.  The invoice number, IM-CustomerNumber, IM-CountryCode, IM-ApplicationId and IM-CorrelationID are required parameters.  .
   * @param {String} invoicenumber The Ingram Micro invoice number.
   * @param {String} version Version of codebase.
   * @param {String} iMCustomerNumber Your unique Ingram Micro customer number.
   * @param {String} iMCountryCode Two-character ISO country code.
   * @param {String} iMCorrelationID Unique transaction number to identify each transaction across all the systems.
   * @param {String} iMApplicationID Unique value used to identify the sender of the transaction. Example: MyCompany.
   * @param {Object} opts Optional parameters
   * @param {String} [customerType] it should be invoice or order
   * @param {Boolean} [includeSerialNumbers] if serial in the response send as true or else false
   * @param {module:api/InvoicesV6Api~getInvoicedetailsV6Callback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/InvoiceDetailResponse}
   */
  _createClass(InvoicesV6Api, [{
    key: "getInvoicedetailsV6",
    value: function getInvoicedetailsV6(invoicenumber, version, iMCustomerNumber, iMCountryCode, iMCorrelationID, iMApplicationID, opts, callback) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'invoicenumber' is set
      if (invoicenumber === undefined || invoicenumber === null) {
        throw new Error("Missing the required parameter 'invoicenumber' when calling getInvoicedetailsV6");
      }
      // verify the required parameter 'version' is set
      if (version === undefined || version === null) {
        throw new Error("Missing the required parameter 'version' when calling getInvoicedetailsV6");
      }
      // verify the required parameter 'iMCustomerNumber' is set
      if (iMCustomerNumber === undefined || iMCustomerNumber === null) {
        throw new Error("Missing the required parameter 'iMCustomerNumber' when calling getInvoicedetailsV6");
      }
      // verify the required parameter 'iMCountryCode' is set
      if (iMCountryCode === undefined || iMCountryCode === null) {
        throw new Error("Missing the required parameter 'iMCountryCode' when calling getInvoicedetailsV6");
      }
      // verify the required parameter 'iMCorrelationID' is set
      if (iMCorrelationID === undefined || iMCorrelationID === null) {
        throw new Error("Missing the required parameter 'iMCorrelationID' when calling getInvoicedetailsV6");
      }
      // verify the required parameter 'iMApplicationID' is set
      if (iMApplicationID === undefined || iMApplicationID === null) {
        throw new Error("Missing the required parameter 'iMApplicationID' when calling getInvoicedetailsV6");
      }
      var pathParams = {
        'invoicenumber': invoicenumber
      };
      var queryParams = {
        'customerType': opts['customerType'],
        'includeSerialNumbers': opts['includeSerialNumbers']
      };
      var headerParams = {
        'version': version,
        'IM-CustomerNumber': iMCustomerNumber,
        'IM-CountryCode': iMCountryCode,
        'IM-CorrelationID': iMCorrelationID,
        'IM-ApplicationID': iMApplicationID
      };
      var formParams = {};
      var authNames = ['application'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _InvoiceDetailResponse["default"];
      return this.apiClient.callApi('/resellers/v6/invoices/{invoicenumber}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
  }]);
  return InvoicesV6Api;
}();
/**
 * Reseller API
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceDetailsv61ResponseFxRateInfo model module.
 * @module model/InvoiceDetailsv61ResponseFxRateInfo
 * @version 6.0
 */
class InvoiceDetailsv61ResponseFxRateInfo {
    /**
     * Constructs a new <code>InvoiceDetailsv61ResponseFxRateInfo</code>.
     * @alias module:model/InvoiceDetailsv61ResponseFxRateInfo
     */
    constructor() { 
        
        InvoiceDetailsv61ResponseFxRateInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceDetailsv61ResponseFxRateInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceDetailsv61ResponseFxRateInfo} obj Optional instance to populate.
     * @return {module:model/InvoiceDetailsv61ResponseFxRateInfo} The populated <code>InvoiceDetailsv61ResponseFxRateInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceDetailsv61ResponseFxRateInfo();

            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('companyCurrency')) {
                obj['companyCurrency'] = ApiClient.convertToType(data['companyCurrency'], 'String');
            }
            if (data.hasOwnProperty('invoiceCurrency')) {
                obj['invoiceCurrency'] = ApiClient.convertToType(data['invoiceCurrency'], 'String');
            }
            if (data.hasOwnProperty('currencyFxRate')) {
                obj['currencyFxRate'] = ApiClient.convertToType(data['currencyFxRate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceDetailsv61ResponseFxRateInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceDetailsv61ResponseFxRateInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['companyCurrency'] && !(typeof data['companyCurrency'] === 'string' || data['companyCurrency'] instanceof String)) {
            throw new Error("Expected the field `companyCurrency` to be a primitive type in the JSON string but got " + data['companyCurrency']);
        }
        // ensure the json data is a string
        if (data['invoiceCurrency'] && !(typeof data['invoiceCurrency'] === 'string' || data['invoiceCurrency'] instanceof String)) {
            throw new Error("Expected the field `invoiceCurrency` to be a primitive type in the JSON string but got " + data['invoiceCurrency']);
        }

        return true;
    }


}



/**
 * Currency code.
 * @member {String} currencyCode
 */
InvoiceDetailsv61ResponseFxRateInfo.prototype['currencyCode'] = undefined;

/**
 * Company currency code.
 * @member {String} companyCurrency
 */
InvoiceDetailsv61ResponseFxRateInfo.prototype['companyCurrency'] = undefined;

/**
 * Invoice currency.
 * @member {String} invoiceCurrency
 */
InvoiceDetailsv61ResponseFxRateInfo.prototype['invoiceCurrency'] = undefined;

/**
 * Currency FX rate.
 * @member {Number} currencyFxRate
 */
InvoiceDetailsv61ResponseFxRateInfo.prototype['currencyFxRate'] = undefined;






export default InvoiceDetailsv61ResponseFxRateInfo;


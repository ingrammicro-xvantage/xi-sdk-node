/**
 * XI Sdk Resellers
 * For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderCreateV7RequestAdditionalAttributesInner from './OrderCreateV7RequestAdditionalAttributesInner';
import OrderCreateV7RequestEndUserInfo from './OrderCreateV7RequestEndUserInfo';
import OrderCreateV7RequestLinesInner from './OrderCreateV7RequestLinesInner';
import OrderCreateV7RequestResellerInfo from './OrderCreateV7RequestResellerInfo';
import OrderCreateV7RequestShipToInfo from './OrderCreateV7RequestShipToInfo';
import OrderCreateV7RequestShipmentDetails from './OrderCreateV7RequestShipmentDetails';
import OrderCreateV7RequestVmfAdditionalAttributesInner from './OrderCreateV7RequestVmfAdditionalAttributesInner';

/**
 * The OrderCreateV7Request model module.
 * @module model/OrderCreateV7Request
 * @version 1.0.0
 */
class OrderCreateV7Request {
    /**
     * Constructs a new <code>OrderCreateV7Request</code>.
     * @alias module:model/OrderCreateV7Request
     */
    constructor() { 
        
        OrderCreateV7Request.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderCreateV7Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCreateV7Request} obj Optional instance to populate.
     * @return {module:model/OrderCreateV7Request} The populated <code>OrderCreateV7Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCreateV7Request();

            if (data.hasOwnProperty('quoteNumber')) {
                obj['quoteNumber'] = ApiClient.convertToType(data['quoteNumber'], 'String');
            }
            if (data.hasOwnProperty('customerOrderNumber')) {
                obj['customerOrderNumber'] = ApiClient.convertToType(data['customerOrderNumber'], 'String');
            }
            if (data.hasOwnProperty('endCustomerOrderNumber')) {
                obj['endCustomerOrderNumber'] = ApiClient.convertToType(data['endCustomerOrderNumber'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('billToAddressId')) {
                obj['billToAddressId'] = ApiClient.convertToType(data['billToAddressId'], 'String');
            }
            if (data.hasOwnProperty('specialBidNumber')) {
                obj['specialBidNumber'] = ApiClient.convertToType(data['specialBidNumber'], 'String');
            }
            if (data.hasOwnProperty('acceptBackOrder')) {
                obj['acceptBackOrder'] = ApiClient.convertToType(data['acceptBackOrder'], 'Boolean');
            }
            if (data.hasOwnProperty('vendAuthNumber')) {
                obj['vendAuthNumber'] = ApiClient.convertToType(data['vendAuthNumber'], 'String');
            }
            if (data.hasOwnProperty('resellerInfo')) {
                obj['resellerInfo'] = OrderCreateV7RequestResellerInfo.constructFromObject(data['resellerInfo']);
            }
            if (data.hasOwnProperty('endUserInfo')) {
                obj['endUserInfo'] = OrderCreateV7RequestEndUserInfo.constructFromObject(data['endUserInfo']);
            }
            if (data.hasOwnProperty('shipToInfo')) {
                obj['shipToInfo'] = OrderCreateV7RequestShipToInfo.constructFromObject(data['shipToInfo']);
            }
            if (data.hasOwnProperty('shipmentDetails')) {
                obj['shipmentDetails'] = OrderCreateV7RequestShipmentDetails.constructFromObject(data['shipmentDetails']);
            }
            if (data.hasOwnProperty('additionalAttributes')) {
                obj['additionalAttributes'] = ApiClient.convertToType(data['additionalAttributes'], [OrderCreateV7RequestAdditionalAttributesInner]);
            }
            if (data.hasOwnProperty('vmfAdditionalAttributes')) {
                obj['vmfAdditionalAttributes'] = ApiClient.convertToType(data['vmfAdditionalAttributes'], [OrderCreateV7RequestVmfAdditionalAttributesInner]);
            }
            if (data.hasOwnProperty('lines')) {
                obj['lines'] = ApiClient.convertToType(data['lines'], [OrderCreateV7RequestLinesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCreateV7Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCreateV7Request</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['quoteNumber'] && !(typeof data['quoteNumber'] === 'string' || data['quoteNumber'] instanceof String)) {
            throw new Error("Expected the field `quoteNumber` to be a primitive type in the JSON string but got " + data['quoteNumber']);
        }
        // ensure the json data is a string
        if (data['customerOrderNumber'] && !(typeof data['customerOrderNumber'] === 'string' || data['customerOrderNumber'] instanceof String)) {
            throw new Error("Expected the field `customerOrderNumber` to be a primitive type in the JSON string but got " + data['customerOrderNumber']);
        }
        // ensure the json data is a string
        if (data['endCustomerOrderNumber'] && !(typeof data['endCustomerOrderNumber'] === 'string' || data['endCustomerOrderNumber'] instanceof String)) {
            throw new Error("Expected the field `endCustomerOrderNumber` to be a primitive type in the JSON string but got " + data['endCustomerOrderNumber']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['billToAddressId'] && !(typeof data['billToAddressId'] === 'string' || data['billToAddressId'] instanceof String)) {
            throw new Error("Expected the field `billToAddressId` to be a primitive type in the JSON string but got " + data['billToAddressId']);
        }
        // ensure the json data is a string
        if (data['specialBidNumber'] && !(typeof data['specialBidNumber'] === 'string' || data['specialBidNumber'] instanceof String)) {
            throw new Error("Expected the field `specialBidNumber` to be a primitive type in the JSON string but got " + data['specialBidNumber']);
        }
        // ensure the json data is a string
        if (data['vendAuthNumber'] && !(typeof data['vendAuthNumber'] === 'string' || data['vendAuthNumber'] instanceof String)) {
            throw new Error("Expected the field `vendAuthNumber` to be a primitive type in the JSON string but got " + data['vendAuthNumber']);
        }
        // validate the optional field `resellerInfo`
        if (data['resellerInfo']) { // data not null
          OrderCreateV7RequestResellerInfo.validateJSON(data['resellerInfo']);
        }
        // validate the optional field `endUserInfo`
        if (data['endUserInfo']) { // data not null
          OrderCreateV7RequestEndUserInfo.validateJSON(data['endUserInfo']);
        }
        // validate the optional field `shipToInfo`
        if (data['shipToInfo']) { // data not null
          OrderCreateV7RequestShipToInfo.validateJSON(data['shipToInfo']);
        }
        // validate the optional field `shipmentDetails`
        if (data['shipmentDetails']) { // data not null
          OrderCreateV7RequestShipmentDetails.validateJSON(data['shipmentDetails']);
        }
        if (data['additionalAttributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['additionalAttributes'])) {
                throw new Error("Expected the field `additionalAttributes` to be an array in the JSON data but got " + data['additionalAttributes']);
            }
            // validate the optional field `additionalAttributes` (array)
            for (const item of data['additionalAttributes']) {
                OrderCreateV7RequestAdditionalAttributesInner.validateJSON(item);
            };
        }
        if (data['vmfAdditionalAttributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vmfAdditionalAttributes'])) {
                throw new Error("Expected the field `vmfAdditionalAttributes` to be an array in the JSON data but got " + data['vmfAdditionalAttributes']);
            }
            // validate the optional field `vmfAdditionalAttributes` (array)
            for (const item of data['vmfAdditionalAttributes']) {
                OrderCreateV7RequestVmfAdditionalAttributesInner.validateJSON(item);
            };
        }
        if (data['lines']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lines'])) {
                throw new Error("Expected the field `lines` to be an array in the JSON data but got " + data['lines']);
            }
            // validate the optional field `lines` (array)
            for (const item of data['lines']) {
                OrderCreateV7RequestLinesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A unique identifier generated by Ingram Micro's CRM specific to each quote.
 * @member {String} quoteNumber
 */
OrderCreateV7Request.prototype['quoteNumber'] = undefined;

/**
 * The reseller's order number for reference in their system.
 * @member {String} customerOrderNumber
 */
OrderCreateV7Request.prototype['customerOrderNumber'] = undefined;

/**
 * The end customer's order number for reference in their system.
 * @member {String} endCustomerOrderNumber
 */
OrderCreateV7Request.prototype['endCustomerOrderNumber'] = undefined;

/**
 * Order header level notes.
 * @member {String} notes
 */
OrderCreateV7Request.prototype['notes'] = undefined;

/**
 * Suffix used to identify billing address. Created during onboarding. Resellers are provided with one or more address IDs depending on how many bill to addresses they need for various flooring companies they are using for credit.
 * @member {String} billToAddressId
 */
OrderCreateV7Request.prototype['billToAddressId'] = undefined;

/**
 * The bid number is provided to the reseller by the vendor for special pricing and discounts. Line-level bid numbers take precedence over header-level bid numbers.
 * @member {String} specialBidNumber
 */
OrderCreateV7Request.prototype['specialBidNumber'] = undefined;

/**
 * ENUM ['true','false'] - accept order if this item is backordered. This field along with shipComplete field decides the value of backorderflag. The value of this field is ignored when shipComplete field is present.
 * @member {Boolean} acceptBackOrder
 */
OrderCreateV7Request.prototype['acceptBackOrder'] = undefined;

/**
 * Authorization number provided by vendor to Ingram's reseller. Orders will be placed on hold without this value, vendor specific mandatory field - please reach out Ingram Sales team for list of vendor for whom this is mandatory.
 * @member {String} vendAuthNumber
 */
OrderCreateV7Request.prototype['vendAuthNumber'] = undefined;

/**
 * @member {module:model/OrderCreateV7RequestResellerInfo} resellerInfo
 */
OrderCreateV7Request.prototype['resellerInfo'] = undefined;

/**
 * @member {module:model/OrderCreateV7RequestEndUserInfo} endUserInfo
 */
OrderCreateV7Request.prototype['endUserInfo'] = undefined;

/**
 * @member {module:model/OrderCreateV7RequestShipToInfo} shipToInfo
 */
OrderCreateV7Request.prototype['shipToInfo'] = undefined;

/**
 * @member {module:model/OrderCreateV7RequestShipmentDetails} shipmentDetails
 */
OrderCreateV7Request.prototype['shipmentDetails'] = undefined;

/**
 * Shipment-level additional attributes.
 * @member {Array.<module:model/OrderCreateV7RequestAdditionalAttributesInner>} additionalAttributes
 */
OrderCreateV7Request.prototype['additionalAttributes'] = undefined;

/**
 * The object containing the list of fields required at a header level by the vendor.
 * @member {Array.<module:model/OrderCreateV7RequestVmfAdditionalAttributesInner>} vmfAdditionalAttributes
 */
OrderCreateV7Request.prototype['vmfAdditionalAttributes'] = undefined;

/**
 * @member {Array.<module:model/OrderCreateV7RequestLinesInner>} lines
 */
OrderCreateV7Request.prototype['lines'] = undefined;






export default OrderCreateV7Request;


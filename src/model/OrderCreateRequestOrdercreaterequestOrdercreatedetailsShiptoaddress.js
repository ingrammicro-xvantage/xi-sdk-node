/**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress model module.
 * @module model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress
 * @version 1.0.0
 */
class OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress {
    /**
     * Constructs a new <code>OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress</code>.
     * @alias module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress
     * @param addressline1 {String} Company Name or person to deliver. *If there isn’t an attention line please add the company name on address line 1.   UPS and FedEx will create surcharges if address line 1 contains a physical address.
     * @param addressline2 {String} Street address for delivery
     * @param city {String} Ship to city
     * @param state {String} Ship to State or Region
     * @param postalcode {String} Ship to Zip code or Postal code
     */
    constructor(addressline1, addressline2, city, state, postalcode) { 
        
        OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.initialize(this, addressline1, addressline2, city, state, postalcode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addressline1, addressline2, city, state, postalcode) { 
        obj['addressline1'] = addressline1;
        obj['addressline2'] = addressline2;
        obj['city'] = city;
        obj['state'] = state;
        obj['postalcode'] = postalcode;
    }

    /**
     * Constructs a <code>OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress} obj Optional instance to populate.
     * @return {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress} The populated <code>OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress();

            if (data.hasOwnProperty('attention')) {
                obj['attention'] = ApiClient.convertToType(data['attention'], 'String');
            }
            if (data.hasOwnProperty('addressline1')) {
                obj['addressline1'] = ApiClient.convertToType(data['addressline1'], 'String');
            }
            if (data.hasOwnProperty('addressline2')) {
                obj['addressline2'] = ApiClient.convertToType(data['addressline2'], 'String');
            }
            if (data.hasOwnProperty('addressline3')) {
                obj['addressline3'] = ApiClient.convertToType(data['addressline3'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('postalcode')) {
                obj['postalcode'] = ApiClient.convertToType(data['postalcode'], 'String');
            }
            if (data.hasOwnProperty('countrycode')) {
                obj['countrycode'] = ApiClient.convertToType(data['countrycode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attention'] && !(typeof data['attention'] === 'string' || data['attention'] instanceof String)) {
            throw new Error("Expected the field `attention` to be a primitive type in the JSON string but got " + data['attention']);
        }
        // ensure the json data is a string
        if (data['addressline1'] && !(typeof data['addressline1'] === 'string' || data['addressline1'] instanceof String)) {
            throw new Error("Expected the field `addressline1` to be a primitive type in the JSON string but got " + data['addressline1']);
        }
        // ensure the json data is a string
        if (data['addressline2'] && !(typeof data['addressline2'] === 'string' || data['addressline2'] instanceof String)) {
            throw new Error("Expected the field `addressline2` to be a primitive type in the JSON string but got " + data['addressline2']);
        }
        // ensure the json data is a string
        if (data['addressline3'] && !(typeof data['addressline3'] === 'string' || data['addressline3'] instanceof String)) {
            throw new Error("Expected the field `addressline3` to be a primitive type in the JSON string but got " + data['addressline3']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['postalcode'] && !(typeof data['postalcode'] === 'string' || data['postalcode'] instanceof String)) {
            throw new Error("Expected the field `postalcode` to be a primitive type in the JSON string but got " + data['postalcode']);
        }
        // ensure the json data is a string
        if (data['countrycode'] && !(typeof data['countrycode'] === 'string' || data['countrycode'] instanceof String)) {
            throw new Error("Expected the field `countrycode` to be a primitive type in the JSON string but got " + data['countrycode']);
        }

        return true;
    }


}

OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.RequiredProperties = ["addressline1", "addressline2", "city", "state", "postalcode"];

/**
 * Customer contact name
 * @member {String} attention
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['attention'] = undefined;

/**
 * Company Name or person to deliver. *If there isn’t an attention line please add the company name on address line 1.   UPS and FedEx will create surcharges if address line 1 contains a physical address.
 * @member {String} addressline1
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['addressline1'] = undefined;

/**
 * Street address for delivery
 * @member {String} addressline2
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['addressline2'] = undefined;

/**
 * Continuation of address line 2
 * @member {String} addressline3
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['addressline3'] = undefined;

/**
 * Ship to city
 * @member {String} city
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['city'] = undefined;

/**
 * Ship to State or Region
 * @member {String} state
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['state'] = undefined;

/**
 * Ship to Zip code or Postal code
 * @member {String} postalcode
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['postalcode'] = undefined;

/**
 * Ship to country
 * @member {String} countrycode
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.prototype['countrycode'] = undefined;






export default OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress;


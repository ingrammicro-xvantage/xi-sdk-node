/**
 * XI Sdk Resellers
 * For resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductSearchResponseCatalogInner from './ProductSearchResponseCatalogInner';
import ProductSearchResponseSubscriptionCatalogInner from './ProductSearchResponseSubscriptionCatalogInner';

/**
 * The ProductSearchResponse model module.
 * @module model/ProductSearchResponse
 * @version 1.0.0
 */
class ProductSearchResponse {
    /**
     * Constructs a new <code>ProductSearchResponse</code>.
     * @alias module:model/ProductSearchResponse
     */
    constructor() { 
        
        ProductSearchResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductSearchResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductSearchResponse} obj Optional instance to populate.
     * @return {module:model/ProductSearchResponse} The populated <code>ProductSearchResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductSearchResponse();

            if (data.hasOwnProperty('recordsFound')) {
                obj['recordsFound'] = ApiClient.convertToType(data['recordsFound'], 'Number');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageNumber')) {
                obj['pageNumber'] = ApiClient.convertToType(data['pageNumber'], 'Number');
            }
            if (data.hasOwnProperty('catalog')) {
                obj['catalog'] = ApiClient.convertToType(data['catalog'], [ProductSearchResponseCatalogInner]);
            }
            if (data.hasOwnProperty('subscriptionCatalog')) {
                obj['subscriptionCatalog'] = ApiClient.convertToType(data['subscriptionCatalog'], [ProductSearchResponseSubscriptionCatalogInner]);
            }
            if (data.hasOwnProperty('nextPage')) {
                obj['nextPage'] = ApiClient.convertToType(data['nextPage'], 'String');
            }
            if (data.hasOwnProperty('previousPage')) {
                obj['previousPage'] = ApiClient.convertToType(data['previousPage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductSearchResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductSearchResponse</code>.
     */
    static validateJSON(data) {
        if (data['catalog']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['catalog'])) {
                throw new Error("Expected the field `catalog` to be an array in the JSON data but got " + data['catalog']);
            }
            // validate the optional field `catalog` (array)
            for (const item of data['catalog']) {
                ProductSearchResponseCatalogInner.validateJSON(item);
            };
        }
        if (data['subscriptionCatalog']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subscriptionCatalog'])) {
                throw new Error("Expected the field `subscriptionCatalog` to be an array in the JSON data but got " + data['subscriptionCatalog']);
            }
            // validate the optional field `subscriptionCatalog` (array)
            for (const item of data['subscriptionCatalog']) {
                ProductSearchResponseSubscriptionCatalogInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextPage'] && !(typeof data['nextPage'] === 'string' || data['nextPage'] instanceof String)) {
            throw new Error("Expected the field `nextPage` to be a primitive type in the JSON string but got " + data['nextPage']);
        }
        // ensure the json data is a string
        if (data['previousPage'] && !(typeof data['previousPage'] === 'string' || data['previousPage'] instanceof String)) {
            throw new Error("Expected the field `previousPage` to be a primitive type in the JSON string but got " + data['previousPage']);
        }

        return true;
    }


}



/**
 * The number of recourds found for the search.
 * @member {Number} recordsFound
 */
ProductSearchResponse.prototype['recordsFound'] = undefined;

/**
 * The number of results per page. Default is 25.
 * @member {Number} pageSize
 */
ProductSearchResponse.prototype['pageSize'] = undefined;

/**
 * current page number default is 1
 * @member {Number} pageNumber
 */
ProductSearchResponse.prototype['pageNumber'] = undefined;

/**
 * @member {Array.<module:model/ProductSearchResponseCatalogInner>} catalog
 */
ProductSearchResponse.prototype['catalog'] = undefined;

/**
 * @member {Array.<module:model/ProductSearchResponseSubscriptionCatalogInner>} subscriptionCatalog
 */
ProductSearchResponse.prototype['subscriptionCatalog'] = undefined;

/**
 * link/URL for accessing next page.
 * @member {String} nextPage
 */
ProductSearchResponse.prototype['nextPage'] = undefined;

/**
 * link/URL for accessing previous page.
 * @member {String} previousPage
 */
ProductSearchResponse.prototype['previousPage'] = undefined;






export default ProductSearchResponse;


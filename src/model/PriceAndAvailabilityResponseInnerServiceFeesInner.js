/**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PriceAndAvailabilityResponseInnerServiceFeesInner model module.
 * @module model/PriceAndAvailabilityResponseInnerServiceFeesInner
 * @version 1.0.0
 */
class PriceAndAvailabilityResponseInnerServiceFeesInner {
    /**
     * Constructs a new <code>PriceAndAvailabilityResponseInnerServiceFeesInner</code>.
     * @alias module:model/PriceAndAvailabilityResponseInnerServiceFeesInner
     */
    constructor() { 
        
        PriceAndAvailabilityResponseInnerServiceFeesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PriceAndAvailabilityResponseInnerServiceFeesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PriceAndAvailabilityResponseInnerServiceFeesInner} obj Optional instance to populate.
     * @return {module:model/PriceAndAvailabilityResponseInnerServiceFeesInner} The populated <code>PriceAndAvailabilityResponseInnerServiceFeesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PriceAndAvailabilityResponseInnerServiceFeesInner();

            if (data.hasOwnProperty('conditionType')) {
                obj['conditionType'] = ApiClient.convertToType(data['conditionType'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PriceAndAvailabilityResponseInnerServiceFeesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PriceAndAvailabilityResponseInnerServiceFeesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['conditionType'] && !(typeof data['conditionType'] === 'string' || data['conditionType'] instanceof String)) {
            throw new Error("Expected the field `conditionType` to be a primitive type in the JSON string but got " + data['conditionType']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['endDate'] && !(typeof data['endDate'] === 'string' || data['endDate'] instanceof String)) {
            throw new Error("Expected the field `endDate` to be a primitive type in the JSON string but got " + data['endDate']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }

        return true;
    }


}



/**
 * Condition Type of the service fees.
 * @member {String} conditionType
 */
PriceAndAvailabilityResponseInnerServiceFeesInner.prototype['conditionType'] = undefined;

/**
 * Description of the service fees.
 * @member {String} description
 */
PriceAndAvailabilityResponseInnerServiceFeesInner.prototype['description'] = undefined;

/**
 * Amount of the service fees.
 * @member {Number} amount
 */
PriceAndAvailabilityResponseInnerServiceFeesInner.prototype['amount'] = undefined;

/**
 * End Date of the service fees.
 * @member {String} endDate
 */
PriceAndAvailabilityResponseInnerServiceFeesInner.prototype['endDate'] = undefined;

/**
 * Currency Code of the service fees.
 * @member {String} currencyCode
 */
PriceAndAvailabilityResponseInnerServiceFeesInner.prototype['currencyCode'] = undefined;






export default PriceAndAvailabilityResponseInnerServiceFeesInner;


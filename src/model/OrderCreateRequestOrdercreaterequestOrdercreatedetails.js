/**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner from './OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner';
import OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner from './OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner';
import OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress from './OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress';

/**
 * The OrderCreateRequestOrdercreaterequestOrdercreatedetails model module.
 * @module model/OrderCreateRequestOrdercreaterequestOrdercreatedetails
 * @version 1.0.0
 */
class OrderCreateRequestOrdercreaterequestOrdercreatedetails {
    /**
     * Constructs a new <code>OrderCreateRequestOrdercreaterequestOrdercreatedetails</code>.
     * @alias module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetails
     * @param customerponumber {String} The customers unique Purchase Order number. Keep it unique to retrieve order information
     * @param ordertype {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetails.OrdertypeEnum} Order Type - Standard orders, Direct ship orders
     * @param shiptoaddress {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress} 
     * @param lines {Array.<module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner>} 
     */
    constructor(customerponumber, ordertype, shiptoaddress, lines) { 
        
        OrderCreateRequestOrdercreaterequestOrdercreatedetails.initialize(this, customerponumber, ordertype, shiptoaddress, lines);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerponumber, ordertype, shiptoaddress, lines) { 
        obj['customerponumber'] = customerponumber;
        obj['ordertype'] = ordertype;
        obj['shiptoaddress'] = shiptoaddress;
        obj['lines'] = lines;
    }

    /**
     * Constructs a <code>OrderCreateRequestOrdercreaterequestOrdercreatedetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetails} obj Optional instance to populate.
     * @return {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetails} The populated <code>OrderCreateRequestOrdercreaterequestOrdercreatedetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderCreateRequestOrdercreaterequestOrdercreatedetails();

            if (data.hasOwnProperty('customerponumber')) {
                obj['customerponumber'] = ApiClient.convertToType(data['customerponumber'], 'String');
            }
            if (data.hasOwnProperty('ordertype')) {
                obj['ordertype'] = ApiClient.convertToType(data['ordertype'], 'String');
            }
            if (data.hasOwnProperty('enduserordernumber')) {
                obj['enduserordernumber'] = ApiClient.convertToType(data['enduserordernumber'], 'String');
            }
            if (data.hasOwnProperty('billtosuffix')) {
                obj['billtosuffix'] = ApiClient.convertToType(data['billtosuffix'], 'String');
            }
            if (data.hasOwnProperty('shiptosuffix')) {
                obj['shiptosuffix'] = ApiClient.convertToType(data['shiptosuffix'], 'String');
            }
            if (data.hasOwnProperty('shiptoaddress')) {
                obj['shiptoaddress'] = OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.constructFromObject(data['shiptoaddress']);
            }
            if (data.hasOwnProperty('carriercode')) {
                obj['carriercode'] = ApiClient.convertToType(data['carriercode'], 'String');
            }
            if (data.hasOwnProperty('thirdpartyfreightaccountnumber')) {
                obj['thirdpartyfreightaccountnumber'] = ApiClient.convertToType(data['thirdpartyfreightaccountnumber'], 'String');
            }
            if (data.hasOwnProperty('specialbidnumber')) {
                obj['specialbidnumber'] = ApiClient.convertToType(data['specialbidnumber'], 'String');
            }
            if (data.hasOwnProperty('lines')) {
                obj['lines'] = ApiClient.convertToType(data['lines'], [OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner]);
            }
            if (data.hasOwnProperty('extendedspecs')) {
                obj['extendedspecs'] = ApiClient.convertToType(data['extendedspecs'], [OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderCreateRequestOrdercreaterequestOrdercreatedetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderCreateRequestOrdercreaterequestOrdercreatedetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrderCreateRequestOrdercreaterequestOrdercreatedetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['customerponumber'] && !(typeof data['customerponumber'] === 'string' || data['customerponumber'] instanceof String)) {
            throw new Error("Expected the field `customerponumber` to be a primitive type in the JSON string but got " + data['customerponumber']);
        }
        // ensure the json data is a string
        if (data['ordertype'] && !(typeof data['ordertype'] === 'string' || data['ordertype'] instanceof String)) {
            throw new Error("Expected the field `ordertype` to be a primitive type in the JSON string but got " + data['ordertype']);
        }
        // ensure the json data is a string
        if (data['enduserordernumber'] && !(typeof data['enduserordernumber'] === 'string' || data['enduserordernumber'] instanceof String)) {
            throw new Error("Expected the field `enduserordernumber` to be a primitive type in the JSON string but got " + data['enduserordernumber']);
        }
        // ensure the json data is a string
        if (data['billtosuffix'] && !(typeof data['billtosuffix'] === 'string' || data['billtosuffix'] instanceof String)) {
            throw new Error("Expected the field `billtosuffix` to be a primitive type in the JSON string but got " + data['billtosuffix']);
        }
        // ensure the json data is a string
        if (data['shiptosuffix'] && !(typeof data['shiptosuffix'] === 'string' || data['shiptosuffix'] instanceof String)) {
            throw new Error("Expected the field `shiptosuffix` to be a primitive type in the JSON string but got " + data['shiptosuffix']);
        }
        // validate the optional field `shiptoaddress`
        if (data['shiptoaddress']) { // data not null
          OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress.validateJSON(data['shiptoaddress']);
        }
        // ensure the json data is a string
        if (data['carriercode'] && !(typeof data['carriercode'] === 'string' || data['carriercode'] instanceof String)) {
            throw new Error("Expected the field `carriercode` to be a primitive type in the JSON string but got " + data['carriercode']);
        }
        // ensure the json data is a string
        if (data['thirdpartyfreightaccountnumber'] && !(typeof data['thirdpartyfreightaccountnumber'] === 'string' || data['thirdpartyfreightaccountnumber'] instanceof String)) {
            throw new Error("Expected the field `thirdpartyfreightaccountnumber` to be a primitive type in the JSON string but got " + data['thirdpartyfreightaccountnumber']);
        }
        // ensure the json data is a string
        if (data['specialbidnumber'] && !(typeof data['specialbidnumber'] === 'string' || data['specialbidnumber'] instanceof String)) {
            throw new Error("Expected the field `specialbidnumber` to be a primitive type in the JSON string but got " + data['specialbidnumber']);
        }
        if (data['lines']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['lines'])) {
                throw new Error("Expected the field `lines` to be an array in the JSON data but got " + data['lines']);
            }
            // validate the optional field `lines` (array)
            for (const item of data['lines']) {
                OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner.validateJSON(item);
            };
        }
        if (data['extendedspecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['extendedspecs'])) {
                throw new Error("Expected the field `extendedspecs` to be an array in the JSON data but got " + data['extendedspecs']);
            }
            // validate the optional field `extendedspecs` (array)
            for (const item of data['extendedspecs']) {
                OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner.validateJSON(item);
            };
        }

        return true;
    }


}

OrderCreateRequestOrdercreaterequestOrdercreatedetails.RequiredProperties = ["customerponumber", "ordertype", "shiptoaddress", "lines"];

/**
 * The customers unique Purchase Order number. Keep it unique to retrieve order information
 * @member {String} customerponumber
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['customerponumber'] = undefined;

/**
 * Order Type - Standard orders, Direct ship orders
 * @member {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetails.OrdertypeEnum} ordertype
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['ordertype'] = undefined;

/**
 * Customers End-user PO number
 * @member {String} enduserordernumber
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['enduserordernumber'] = undefined;

/**
 * Designates flooring acct to be used
 * @member {String} billtosuffix
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['billtosuffix'] = undefined;

/**
 * Applies to customers with multiple ship to locations (store locations)
 * @member {String} shiptosuffix
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['shiptosuffix'] = undefined;

/**
 * @member {module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsShiptoaddress} shiptoaddress
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['shiptoaddress'] = undefined;

/**
 * A customer can dictate what carrier to use for their shipment (Ingram 2-digit carrier code is required). Our recommendation is leave this field blank which will allow Ingram Micro to choose the best carrier to gain the best freight rates.
 * @member {String} carriercode
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['carriercode'] = undefined;

/**
 * Refers to a third-party freight account number for charging freight against. The account number should be passed within this field and the appropriate carrier code should be supplied within the carrier code tags. Prior to sending your request containing the third-party account number, it must be first entered into our system. Your Ingram Micro Sales Representative can action this for you. If submitted within an order without this preapproval the third-party account number will be ignored.  Note: USA partners- For FedEx Air only (carrier codes F1, FO, F2, FG.), please send three leading zeros before your third-party freight account number (i.e.: 000999999999.) 
 * @member {String} thirdpartyfreightaccountnumber
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['thirdpartyfreightaccountnumber'] = undefined;

/**
 * This is the special quote number given to a customer either by a vendor for special pricing or by Ingram Micro. To receive the special pricing assigned to this number it must be included on the order.
 * @member {String} specialbidnumber
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['specialbidnumber'] = undefined;

/**
 * @member {Array.<module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsLinesInner>} lines
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['lines'] = undefined;

/**
 * @member {Array.<module:model/OrderCreateRequestOrdercreaterequestOrdercreatedetailsExtendedspecsInner>} extendedspecs
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails.prototype['extendedspecs'] = undefined;





/**
 * Allowed values for the <code>ordertype</code> property.
 * @enum {String}
 * @readonly
 */
OrderCreateRequestOrdercreaterequestOrdercreatedetails['OrdertypeEnum'] = {

    /**
     * value: "Standard"
     * @const
     */
    "Standard": "Standard",

    /**
     * value: "Direct Ship"
     * @const
     */
    "Direct Ship": "Direct Ship"
};



export default OrderCreateRequestOrdercreaterequestOrdercreatedetails;


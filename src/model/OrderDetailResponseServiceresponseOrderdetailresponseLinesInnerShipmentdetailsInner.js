/**
 * XI Sdk Resellers
 * For Resellers. Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails from './OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails';

/**
 * The OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner model module.
 * @module model/OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner
 * @version 1.0.0
 */
class OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner {
    /**
     * Constructs a new <code>OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner</code>.
     * @alias module:model/OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner
     */
    constructor() { 
        
        OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner} obj Optional instance to populate.
     * @return {module:model/OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner} The populated <code>OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner();

            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('shipmentdate')) {
                obj['shipmentdate'] = ApiClient.convertToType(data['shipmentdate'], 'String');
            }
            if (data.hasOwnProperty('shipfromwarehouseid')) {
                obj['shipfromwarehouseid'] = ApiClient.convertToType(data['shipfromwarehouseid'], 'String');
            }
            if (data.hasOwnProperty('warehousename')) {
                obj['warehousename'] = ApiClient.convertToType(data['warehousename'], 'String');
            }
            if (data.hasOwnProperty('invoicenumber')) {
                obj['invoicenumber'] = ApiClient.convertToType(data['invoicenumber'], 'String');
            }
            if (data.hasOwnProperty('invoicedate')) {
                obj['invoicedate'] = ApiClient.convertToType(data['invoicedate'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('statusdescription')) {
                obj['statusdescription'] = ApiClient.convertToType(data['statusdescription'], 'String');
            }
            if (data.hasOwnProperty('shippeddate')) {
                obj['shippeddate'] = ApiClient.convertToType(data['shippeddate'], 'String');
            }
            if (data.hasOwnProperty('holdreasoncodedescription')) {
                obj['holdreasoncodedescription'] = ApiClient.convertToType(data['holdreasoncodedescription'], 'String');
            }
            if (data.hasOwnProperty('ponumber')) {
                obj['ponumber'] = ApiClient.convertToType(data['ponumber'], 'String');
            }
            if (data.hasOwnProperty('carriertype')) {
                obj['carriertype'] = ApiClient.convertToType(data['carriertype'], 'String');
            }
            if (data.hasOwnProperty('carriercode')) {
                obj['carriercode'] = ApiClient.convertToType(data['carriercode'], 'String');
            }
            if (data.hasOwnProperty('carriername')) {
                obj['carriername'] = ApiClient.convertToType(data['carriername'], 'String');
            }
            if (data.hasOwnProperty('pronumber')) {
                obj['pronumber'] = ApiClient.convertToType(data['pronumber'], 'String');
            }
            if (data.hasOwnProperty('packagedetails')) {
                obj['packagedetails'] = OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails.constructFromObject(data['packagedetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['shipmentdate'] && !(typeof data['shipmentdate'] === 'string' || data['shipmentdate'] instanceof String)) {
            throw new Error("Expected the field `shipmentdate` to be a primitive type in the JSON string but got " + data['shipmentdate']);
        }
        // ensure the json data is a string
        if (data['shipfromwarehouseid'] && !(typeof data['shipfromwarehouseid'] === 'string' || data['shipfromwarehouseid'] instanceof String)) {
            throw new Error("Expected the field `shipfromwarehouseid` to be a primitive type in the JSON string but got " + data['shipfromwarehouseid']);
        }
        // ensure the json data is a string
        if (data['warehousename'] && !(typeof data['warehousename'] === 'string' || data['warehousename'] instanceof String)) {
            throw new Error("Expected the field `warehousename` to be a primitive type in the JSON string but got " + data['warehousename']);
        }
        // ensure the json data is a string
        if (data['invoicenumber'] && !(typeof data['invoicenumber'] === 'string' || data['invoicenumber'] instanceof String)) {
            throw new Error("Expected the field `invoicenumber` to be a primitive type in the JSON string but got " + data['invoicenumber']);
        }
        // ensure the json data is a string
        if (data['invoicedate'] && !(typeof data['invoicedate'] === 'string' || data['invoicedate'] instanceof String)) {
            throw new Error("Expected the field `invoicedate` to be a primitive type in the JSON string but got " + data['invoicedate']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['statusdescription'] && !(typeof data['statusdescription'] === 'string' || data['statusdescription'] instanceof String)) {
            throw new Error("Expected the field `statusdescription` to be a primitive type in the JSON string but got " + data['statusdescription']);
        }
        // ensure the json data is a string
        if (data['shippeddate'] && !(typeof data['shippeddate'] === 'string' || data['shippeddate'] instanceof String)) {
            throw new Error("Expected the field `shippeddate` to be a primitive type in the JSON string but got " + data['shippeddate']);
        }
        // ensure the json data is a string
        if (data['holdreasoncodedescription'] && !(typeof data['holdreasoncodedescription'] === 'string' || data['holdreasoncodedescription'] instanceof String)) {
            throw new Error("Expected the field `holdreasoncodedescription` to be a primitive type in the JSON string but got " + data['holdreasoncodedescription']);
        }
        // ensure the json data is a string
        if (data['ponumber'] && !(typeof data['ponumber'] === 'string' || data['ponumber'] instanceof String)) {
            throw new Error("Expected the field `ponumber` to be a primitive type in the JSON string but got " + data['ponumber']);
        }
        // ensure the json data is a string
        if (data['carriertype'] && !(typeof data['carriertype'] === 'string' || data['carriertype'] instanceof String)) {
            throw new Error("Expected the field `carriertype` to be a primitive type in the JSON string but got " + data['carriertype']);
        }
        // ensure the json data is a string
        if (data['carriercode'] && !(typeof data['carriercode'] === 'string' || data['carriercode'] instanceof String)) {
            throw new Error("Expected the field `carriercode` to be a primitive type in the JSON string but got " + data['carriercode']);
        }
        // ensure the json data is a string
        if (data['carriername'] && !(typeof data['carriername'] === 'string' || data['carriername'] instanceof String)) {
            throw new Error("Expected the field `carriername` to be a primitive type in the JSON string but got " + data['carriername']);
        }
        // ensure the json data is a string
        if (data['pronumber'] && !(typeof data['pronumber'] === 'string' || data['pronumber'] instanceof String)) {
            throw new Error("Expected the field `pronumber` to be a primitive type in the JSON string but got " + data['pronumber']);
        }
        // validate the optional field `packagedetails`
        if (data['packagedetails']) { // data not null
          OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails.validateJSON(data['packagedetails']);
        }

        return true;
    }


}



/**
 * quantity shipped
 * @member {Number} quantity
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['quantity'] = undefined;

/**
 * date of shipment
 * @member {String} shipmentdate
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['shipmentdate'] = undefined;

/**
 * Warehouse product was shipped from
 * @member {String} shipfromwarehouseid
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['shipfromwarehouseid'] = undefined;

/**
 * name of the warehouse
 * @member {String} warehousename
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['warehousename'] = undefined;

/**
 * Invoice Number
 * @member {String} invoicenumber
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['invoicenumber'] = undefined;

/**
 * date on the invoice generated
 * @member {String} invoicedate
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['invoicedate'] = undefined;

/**
 * code for current Status of the order
 * @member {String} status
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['status'] = undefined;

/**
 * Description of status
 * @member {String} statusdescription
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['statusdescription'] = undefined;

/**
 * date of shipment
 * @member {String} shippeddate
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['shippeddate'] = undefined;

/**
 * Description of the code if the order is on hold
 * @member {String} holdreasoncodedescription
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['holdreasoncodedescription'] = undefined;

/**
 * Ingram PO Number to vendors for direct ship orders
 * @member {String} ponumber
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['ponumber'] = undefined;

/**
 * Helps to determine shipment type. for e.g. LTL is used for heavy shipment. SML is used for light shipment
 * @member {String} carriertype
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['carriertype'] = undefined;

/**
 * 
 * @member {String} carriercode
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['carriercode'] = undefined;

/**
 * Name of the carrier. If carriername is LTL then the tracking info is in the \"pronumber\" data field
 * @member {String} carriername
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['carriername'] = undefined;

/**
 * 
 * @member {String} pronumber
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['pronumber'] = undefined;

/**
 * @member {module:model/OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInnerPackagedetails} packagedetails
 */
OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner.prototype['packagedetails'] = undefined;






export default OrderDetailResponseServiceresponseOrderdetailresponseLinesInnerShipmentdetailsInner;


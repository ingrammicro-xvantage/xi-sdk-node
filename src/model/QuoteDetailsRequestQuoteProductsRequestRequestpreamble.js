/**
 * Reseller API Documentation
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuoteDetailsRequestQuoteProductsRequestRequestpreamble model module.
 * @module model/QuoteDetailsRequestQuoteProductsRequestRequestpreamble
 * @version 6.0
 */
class QuoteDetailsRequestQuoteProductsRequestRequestpreamble {
    /**
     * Constructs a new <code>QuoteDetailsRequestQuoteProductsRequestRequestpreamble</code>.
     * @alias module:model/QuoteDetailsRequestQuoteProductsRequestRequestpreamble
     * @param customerNumber {String} Reseller Number (referred to as the account BCN) is the unique identifier for an Ingram Micro customer account.
     * @param isoCountryCode {String} The ISO country codes are internationally recognized codes designated for each country represented by a two-letter combination (alpha-2).
     */
    constructor(customerNumber, isoCountryCode) { 
        
        QuoteDetailsRequestQuoteProductsRequestRequestpreamble.initialize(this, customerNumber, isoCountryCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerNumber, isoCountryCode) { 
        obj['customerNumber'] = customerNumber;
        obj['isoCountryCode'] = isoCountryCode;
    }

    /**
     * Constructs a <code>QuoteDetailsRequestQuoteProductsRequestRequestpreamble</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDetailsRequestQuoteProductsRequestRequestpreamble} obj Optional instance to populate.
     * @return {module:model/QuoteDetailsRequestQuoteProductsRequestRequestpreamble} The populated <code>QuoteDetailsRequestQuoteProductsRequestRequestpreamble</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDetailsRequestQuoteProductsRequestRequestpreamble();

            if (data.hasOwnProperty('customerNumber')) {
                obj['customerNumber'] = ApiClient.convertToType(data['customerNumber'], 'String');
            }
            if (data.hasOwnProperty('isoCountryCode')) {
                obj['isoCountryCode'] = ApiClient.convertToType(data['isoCountryCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDetailsRequestQuoteProductsRequestRequestpreamble</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDetailsRequestQuoteProductsRequestRequestpreamble</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuoteDetailsRequestQuoteProductsRequestRequestpreamble.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['customerNumber'] && !(typeof data['customerNumber'] === 'string' || data['customerNumber'] instanceof String)) {
            throw new Error("Expected the field `customerNumber` to be a primitive type in the JSON string but got " + data['customerNumber']);
        }
        // ensure the json data is a string
        if (data['isoCountryCode'] && !(typeof data['isoCountryCode'] === 'string' || data['isoCountryCode'] instanceof String)) {
            throw new Error("Expected the field `isoCountryCode` to be a primitive type in the JSON string but got " + data['isoCountryCode']);
        }

        return true;
    }


}

QuoteDetailsRequestQuoteProductsRequestRequestpreamble.RequiredProperties = ["customerNumber", "isoCountryCode"];

/**
 * Reseller Number (referred to as the account BCN) is the unique identifier for an Ingram Micro customer account.
 * @member {String} customerNumber
 */
QuoteDetailsRequestQuoteProductsRequestRequestpreamble.prototype['customerNumber'] = undefined;

/**
 * The ISO country codes are internationally recognized codes designated for each country represented by a two-letter combination (alpha-2).
 * @member {String} isoCountryCode
 */
QuoteDetailsRequestQuoteProductsRequestRequestpreamble.prototype['isoCountryCode'] = undefined;






export default QuoteDetailsRequestQuoteProductsRequestRequestpreamble;


/**
 * XI Sdk Resellers
 * For Resellers seeking to innovate with Ingram Micro's API solutions, automate your eCommerce experience with our array of API's and webhooks to craft a seamless journey for your customers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuoteDetailsResponseProductsInnerBillDetailsInner from './QuoteDetailsResponseProductsInnerBillDetailsInner';
import QuoteDetailsResponseProductsInnerPrice from './QuoteDetailsResponseProductsInnerPrice';

/**
 * The QuoteDetailsResponseProductsInner model module.
 * @module model/QuoteDetailsResponseProductsInner
 * @version 1.0.0
 */
class QuoteDetailsResponseProductsInner {
    /**
     * Constructs a new <code>QuoteDetailsResponseProductsInner</code>.
     * @alias module:model/QuoteDetailsResponseProductsInner
     */
    constructor() { 
        
        QuoteDetailsResponseProductsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuoteDetailsResponseProductsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDetailsResponseProductsInner} obj Optional instance to populate.
     * @return {module:model/QuoteDetailsResponseProductsInner} The populated <code>QuoteDetailsResponseProductsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDetailsResponseProductsInner();

            if (data.hasOwnProperty('quoteProductGuid')) {
                obj['quoteProductGuid'] = ApiClient.convertToType(data['quoteProductGuid'], 'String');
            }
            if (data.hasOwnProperty('lineNumber')) {
                obj['lineNumber'] = ApiClient.convertToType(data['lineNumber'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('remainingQuoteQty')) {
                obj['remainingQuoteQty'] = ApiClient.convertToType(data['remainingQuoteQty'], 'Number');
            }
            if (data.hasOwnProperty('minimumOrderAllowedQty')) {
                obj['minimumOrderAllowedQty'] = ApiClient.convertToType(data['minimumOrderAllowedQty'], 'Number');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('ean')) {
                obj['ean'] = ApiClient.convertToType(data['ean'], 'String');
            }
            if (data.hasOwnProperty('coo')) {
                obj['coo'] = ApiClient.convertToType(data['coo'], 'String');
            }
            if (data.hasOwnProperty('ingramPartNumber')) {
                obj['ingramPartNumber'] = ApiClient.convertToType(data['ingramPartNumber'], 'String');
            }
            if (data.hasOwnProperty('vendorPartNumber')) {
                obj['vendorPartNumber'] = ApiClient.convertToType(data['vendorPartNumber'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('weightUom')) {
                obj['weightUom'] = ApiClient.convertToType(data['weightUom'], 'String');
            }
            if (data.hasOwnProperty('isSuggestionProduct')) {
                obj['isSuggestionProduct'] = ApiClient.convertToType(data['isSuggestionProduct'], 'Boolean');
            }
            if (data.hasOwnProperty('vpnCategory')) {
                obj['vpnCategory'] = ApiClient.convertToType(data['vpnCategory'], 'String');
            }
            if (data.hasOwnProperty('quoteProductsSupplierPartAuxiliaryId')) {
                obj['quoteProductsSupplierPartAuxiliaryId'] = ApiClient.convertToType(data['quoteProductsSupplierPartAuxiliaryId'], 'String');
            }
            if (data.hasOwnProperty('vendorName')) {
                obj['vendorName'] = ApiClient.convertToType(data['vendorName'], 'String');
            }
            if (data.hasOwnProperty('terms')) {
                obj['terms'] = ApiClient.convertToType(data['terms'], 'String');
            }
            if (data.hasOwnProperty('planDescription')) {
                obj['planDescription'] = ApiClient.convertToType(data['planDescription'], 'String');
            }
            if (data.hasOwnProperty('isSubscription')) {
                obj['isSubscription'] = ApiClient.convertToType(data['isSubscription'], 'Boolean');
            }
            if (data.hasOwnProperty('resellerMargin')) {
                obj['resellerMargin'] = ApiClient.convertToType(data['resellerMargin'], 'String');
            }
            if (data.hasOwnProperty('requestedStartDate')) {
                obj['requestedStartDate'] = ApiClient.convertToType(data['requestedStartDate'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'String');
            }
            if (data.hasOwnProperty('serialNumber')) {
                obj['serialNumber'] = ApiClient.convertToType(data['serialNumber'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = QuoteDetailsResponseProductsInnerPrice.constructFromObject(data['price']);
            }
            if (data.hasOwnProperty('billDetails')) {
                obj['billDetails'] = ApiClient.convertToType(data['billDetails'], [QuoteDetailsResponseProductsInnerBillDetailsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDetailsResponseProductsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDetailsResponseProductsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['quoteProductGuid'] && !(typeof data['quoteProductGuid'] === 'string' || data['quoteProductGuid'] instanceof String)) {
            throw new Error("Expected the field `quoteProductGuid` to be a primitive type in the JSON string but got " + data['quoteProductGuid']);
        }
        // ensure the json data is a string
        if (data['lineNumber'] && !(typeof data['lineNumber'] === 'string' || data['lineNumber'] instanceof String)) {
            throw new Error("Expected the field `lineNumber` to be a primitive type in the JSON string but got " + data['lineNumber']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['ean'] && !(typeof data['ean'] === 'string' || data['ean'] instanceof String)) {
            throw new Error("Expected the field `ean` to be a primitive type in the JSON string but got " + data['ean']);
        }
        // ensure the json data is a string
        if (data['coo'] && !(typeof data['coo'] === 'string' || data['coo'] instanceof String)) {
            throw new Error("Expected the field `coo` to be a primitive type in the JSON string but got " + data['coo']);
        }
        // ensure the json data is a string
        if (data['ingramPartNumber'] && !(typeof data['ingramPartNumber'] === 'string' || data['ingramPartNumber'] instanceof String)) {
            throw new Error("Expected the field `ingramPartNumber` to be a primitive type in the JSON string but got " + data['ingramPartNumber']);
        }
        // ensure the json data is a string
        if (data['vendorPartNumber'] && !(typeof data['vendorPartNumber'] === 'string' || data['vendorPartNumber'] instanceof String)) {
            throw new Error("Expected the field `vendorPartNumber` to be a primitive type in the JSON string but got " + data['vendorPartNumber']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['weightUom'] && !(typeof data['weightUom'] === 'string' || data['weightUom'] instanceof String)) {
            throw new Error("Expected the field `weightUom` to be a primitive type in the JSON string but got " + data['weightUom']);
        }
        // ensure the json data is a string
        if (data['vpnCategory'] && !(typeof data['vpnCategory'] === 'string' || data['vpnCategory'] instanceof String)) {
            throw new Error("Expected the field `vpnCategory` to be a primitive type in the JSON string but got " + data['vpnCategory']);
        }
        // ensure the json data is a string
        if (data['quoteProductsSupplierPartAuxiliaryId'] && !(typeof data['quoteProductsSupplierPartAuxiliaryId'] === 'string' || data['quoteProductsSupplierPartAuxiliaryId'] instanceof String)) {
            throw new Error("Expected the field `quoteProductsSupplierPartAuxiliaryId` to be a primitive type in the JSON string but got " + data['quoteProductsSupplierPartAuxiliaryId']);
        }
        // ensure the json data is a string
        if (data['vendorName'] && !(typeof data['vendorName'] === 'string' || data['vendorName'] instanceof String)) {
            throw new Error("Expected the field `vendorName` to be a primitive type in the JSON string but got " + data['vendorName']);
        }
        // ensure the json data is a string
        if (data['terms'] && !(typeof data['terms'] === 'string' || data['terms'] instanceof String)) {
            throw new Error("Expected the field `terms` to be a primitive type in the JSON string but got " + data['terms']);
        }
        // ensure the json data is a string
        if (data['planDescription'] && !(typeof data['planDescription'] === 'string' || data['planDescription'] instanceof String)) {
            throw new Error("Expected the field `planDescription` to be a primitive type in the JSON string but got " + data['planDescription']);
        }
        // ensure the json data is a string
        if (data['resellerMargin'] && !(typeof data['resellerMargin'] === 'string' || data['resellerMargin'] instanceof String)) {
            throw new Error("Expected the field `resellerMargin` to be a primitive type in the JSON string but got " + data['resellerMargin']);
        }
        // ensure the json data is a string
        if (data['requestedStartDate'] && !(typeof data['requestedStartDate'] === 'string' || data['requestedStartDate'] instanceof String)) {
            throw new Error("Expected the field `requestedStartDate` to be a primitive type in the JSON string but got " + data['requestedStartDate']);
        }
        // ensure the json data is a string
        if (data['startDate'] && !(typeof data['startDate'] === 'string' || data['startDate'] instanceof String)) {
            throw new Error("Expected the field `startDate` to be a primitive type in the JSON string but got " + data['startDate']);
        }
        // ensure the json data is a string
        if (data['endDate'] && !(typeof data['endDate'] === 'string' || data['endDate'] instanceof String)) {
            throw new Error("Expected the field `endDate` to be a primitive type in the JSON string but got " + data['endDate']);
        }
        // ensure the json data is a string
        if (data['serialNumber'] && !(typeof data['serialNumber'] === 'string' || data['serialNumber'] instanceof String)) {
            throw new Error("Expected the field `serialNumber` to be a primitive type in the JSON string but got " + data['serialNumber']);
        }
        // validate the optional field `price`
        if (data['price']) { // data not null
          QuoteDetailsResponseProductsInnerPrice.validateJSON(data['price']);
        }
        if (data['billDetails']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['billDetails'])) {
                throw new Error("Expected the field `billDetails` to be an array in the JSON data but got " + data['billDetails']);
            }
            // validate the optional field `billDetails` (array)
            for (const item of data['billDetails']) {
                QuoteDetailsResponseProductsInnerBillDetailsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Quote Product GUID  is the primary quote key in Ingram Micro's CRM - needed to retrieve quote details.
 * @member {String} quoteProductGuid
 */
QuoteDetailsResponseProductsInner.prototype['quoteProductGuid'] = undefined;

/**
 * Line number which the product will appear in the quote.  Line number is manditory when unique configurations are included in a quote and mainting the item line order is required.
 * @member {String} lineNumber
 */
QuoteDetailsResponseProductsInner.prototype['lineNumber'] = undefined;

/**
 * Quantity of product line item quoted.
 * @member {Number} quantity
 */
QuoteDetailsResponseProductsInner.prototype['quantity'] = undefined;

/**
 * @member {Number} remainingQuoteQty
 */
QuoteDetailsResponseProductsInner.prototype['remainingQuoteQty'] = undefined;

/**
 * @member {Number} minimumOrderAllowedQty
 */
QuoteDetailsResponseProductsInner.prototype['minimumOrderAllowedQty'] = undefined;

/**
 * Product line item comments.
 * @member {String} notes
 */
QuoteDetailsResponseProductsInner.prototype['notes'] = undefined;

/**
 * EANUPC
 * @member {String} ean
 */
QuoteDetailsResponseProductsInner.prototype['ean'] = undefined;

/**
 * Country of Origin.
 * @member {String} coo
 */
QuoteDetailsResponseProductsInner.prototype['coo'] = undefined;

/**
 * Ingram Micro SKU (stock keeping unit). An identification, usually alphanumeric, of a particular product that allows it to be tracked for inventory purposes
 * @member {String} ingramPartNumber
 */
QuoteDetailsResponseProductsInner.prototype['ingramPartNumber'] = undefined;

/**
 * Vendor Part Number
 * @member {String} vendorPartNumber
 */
QuoteDetailsResponseProductsInner.prototype['vendorPartNumber'] = undefined;

/**
 * Product description.  Note - The quote view api returns only the product short description as maintained in Ingram Micro's crm system.  For long descriptions, please refer to alternative information sources.
 * @member {String} description
 */
QuoteDetailsResponseProductsInner.prototype['description'] = undefined;

/**
 * Weight is provided based on country standard.  For countries following Imperial standards - weight is presented as pounds with decimal.  In countries following metric standards, weight is provided as kilograms with decimal.
 * @member {Number} weight
 */
QuoteDetailsResponseProductsInner.prototype['weight'] = undefined;

/**
 * Unit of measure
 * @member {String} weightUom
 */
QuoteDetailsResponseProductsInner.prototype['weightUom'] = undefined;

/**
 * Flag to indicate if a product line item is a suggested product.  The suggested product is provided in addition to the requested quoted products and a suggested option.  Suggested products are grouped together for subtotal and total calculations.
 * @member {Boolean} isSuggestionProduct
 */
QuoteDetailsResponseProductsInner.prototype['isSuggestionProduct'] = undefined;

/**
 * Vendor product category specific to Cisco. HWDW (hardware) or service.
 * @member {String} vpnCategory
 */
QuoteDetailsResponseProductsInner.prototype['vpnCategory'] = undefined;

/**
 * Vendor product configuration ID specific to Cisco.
 * @member {String} quoteProductsSupplierPartAuxiliaryId
 */
QuoteDetailsResponseProductsInner.prototype['quoteProductsSupplierPartAuxiliaryId'] = undefined;

/**
 * Vendor name of the product
 * @member {String} vendorName
 */
QuoteDetailsResponseProductsInner.prototype['vendorName'] = undefined;

/**
 * Terms of the quote
 * @member {String} terms
 */
QuoteDetailsResponseProductsInner.prototype['terms'] = undefined;

/**
 * @member {String} planDescription
 */
QuoteDetailsResponseProductsInner.prototype['planDescription'] = undefined;

/**
 * @member {Boolean} isSubscription
 */
QuoteDetailsResponseProductsInner.prototype['isSubscription'] = undefined;

/**
 * @member {String} resellerMargin
 */
QuoteDetailsResponseProductsInner.prototype['resellerMargin'] = undefined;

/**
 * @member {String} requestedStartDate
 */
QuoteDetailsResponseProductsInner.prototype['requestedStartDate'] = undefined;

/**
 * @member {String} startDate
 */
QuoteDetailsResponseProductsInner.prototype['startDate'] = undefined;

/**
 * @member {String} endDate
 */
QuoteDetailsResponseProductsInner.prototype['endDate'] = undefined;

/**
 * @member {String} serialNumber
 */
QuoteDetailsResponseProductsInner.prototype['serialNumber'] = undefined;

/**
 * @member {module:model/QuoteDetailsResponseProductsInnerPrice} price
 */
QuoteDetailsResponseProductsInner.prototype['price'] = undefined;

/**
 * @member {Array.<module:model/QuoteDetailsResponseProductsInnerBillDetailsInner>} billDetails
 */
QuoteDetailsResponseProductsInner.prototype['billDetails'] = undefined;






export default QuoteDetailsResponseProductsInner;


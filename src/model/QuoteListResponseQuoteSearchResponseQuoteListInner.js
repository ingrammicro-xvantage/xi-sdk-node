/**
 * XI SDK Resellers
 * For Resellers. <br> Who are looking to Innovate with Ingram Micro's API SolutionsAutomate your eCommerce with our offering of APIs and Webhooks to create a seamless experience for your customers.
 *
 * The version of the OpenAPI document: 6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuoteListResponseQuoteSearchResponseQuoteListInner model module.
 * @module model/QuoteListResponseQuoteSearchResponseQuoteListInner
 * @version 6.0
 */
class QuoteListResponseQuoteSearchResponseQuoteListInner {
    /**
     * Constructs a new <code>QuoteListResponseQuoteSearchResponseQuoteListInner</code>.
     * @alias module:model/QuoteListResponseQuoteSearchResponseQuoteListInner
     */
    constructor() { 
        
        QuoteListResponseQuoteSearchResponseQuoteListInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuoteListResponseQuoteSearchResponseQuoteListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteListResponseQuoteSearchResponseQuoteListInner} obj Optional instance to populate.
     * @return {module:model/QuoteListResponseQuoteSearchResponseQuoteListInner} The populated <code>QuoteListResponseQuoteSearchResponseQuoteListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteListResponseQuoteSearchResponseQuoteListInner();

            if (data.hasOwnProperty('quoteName')) {
                obj['quoteName'] = ApiClient.convertToType(data['quoteName'], 'String');
            }
            if (data.hasOwnProperty('quoteNumber')) {
                obj['quoteNumber'] = ApiClient.convertToType(data['quoteNumber'], 'String');
            }
            if (data.hasOwnProperty('revisionNumber')) {
                obj['revisionNumber'] = ApiClient.convertToType(data['revisionNumber'], 'Number');
            }
            if (data.hasOwnProperty('endUserName')) {
                obj['endUserName'] = ApiClient.convertToType(data['endUserName'], 'String');
            }
            if (data.hasOwnProperty('bidNumber')) {
                obj['bidNumber'] = ApiClient.convertToType(data['bidNumber'], 'String');
            }
            if (data.hasOwnProperty('totalAmount')) {
                obj['totalAmount'] = ApiClient.convertToType(data['totalAmount'], 'String');
            }
            if (data.hasOwnProperty('quoteStatus')) {
                obj['quoteStatus'] = ApiClient.convertToType(data['quoteStatus'], 'String');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Date');
            }
            if (data.hasOwnProperty('lastModifiedDate')) {
                obj['lastModifiedDate'] = ApiClient.convertToType(data['lastModifiedDate'], 'Date');
            }
            if (data.hasOwnProperty('quoteExpiryDate')) {
                obj['quoteExpiryDate'] = ApiClient.convertToType(data['quoteExpiryDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteListResponseQuoteSearchResponseQuoteListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteListResponseQuoteSearchResponseQuoteListInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['quoteName'] && !(typeof data['quoteName'] === 'string' || data['quoteName'] instanceof String)) {
            throw new Error("Expected the field `quoteName` to be a primitive type in the JSON string but got " + data['quoteName']);
        }
        // ensure the json data is a string
        if (data['quoteNumber'] && !(typeof data['quoteNumber'] === 'string' || data['quoteNumber'] instanceof String)) {
            throw new Error("Expected the field `quoteNumber` to be a primitive type in the JSON string but got " + data['quoteNumber']);
        }
        // ensure the json data is a string
        if (data['endUserName'] && !(typeof data['endUserName'] === 'string' || data['endUserName'] instanceof String)) {
            throw new Error("Expected the field `endUserName` to be a primitive type in the JSON string but got " + data['endUserName']);
        }
        // ensure the json data is a string
        if (data['bidNumber'] && !(typeof data['bidNumber'] === 'string' || data['bidNumber'] instanceof String)) {
            throw new Error("Expected the field `bidNumber` to be a primitive type in the JSON string but got " + data['bidNumber']);
        }
        // ensure the json data is a string
        if (data['totalAmount'] && !(typeof data['totalAmount'] === 'string' || data['totalAmount'] instanceof String)) {
            throw new Error("Expected the field `totalAmount` to be a primitive type in the JSON string but got " + data['totalAmount']);
        }
        // ensure the json data is a string
        if (data['quoteStatus'] && !(typeof data['quoteStatus'] === 'string' || data['quoteStatus'] instanceof String)) {
            throw new Error("Expected the field `quoteStatus` to be a primitive type in the JSON string but got " + data['quoteStatus']);
        }

        return true;
    }


}



/**
 * Quote Name given to quote by sales team or system generated. Generally used as a reference to identify the quote.
 * @member {String} quoteName
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['quoteName'] = undefined;

/**
 * Unique identifier generated by Ingram Micro's CRM specific to each quote. When applying a filter to the quoteNumber and including a partial quote number in the filter, all quotes containing any information included in the filter can be retrieved as a subset of all available customer quotes.
 * @member {String} quoteNumber
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['quoteNumber'] = undefined;

/**
 * When a quote has been revised and updated, the quote number remains the same throughout the lifecycle of the quote, however, a Revision number is updated for each revision of the quote. The revision numbers is associated with the Unique Quote Number.
 * @member {Number} revisionNumber
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['revisionNumber'] = undefined;

/**
 * End User Name is the end customer name that is associated with a quote in Ingram Micro's CRM
 * @member {String} endUserName
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['endUserName'] = undefined;

/**
 * Special Pricing Bid Number, also refers to as Dart Number relates to a unique pricing deal associated with a vendor for the quote.
 * @member {String} bidNumber
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['bidNumber'] = undefined;

/**
 * Total amount of quoted price for all products in the quote.
 * @member {String} totalAmount
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['totalAmount'] = undefined;

/**
 * This refers to the primary status of the quote. API responses will return: Active
 * @member {String} quoteStatus
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['quoteStatus'] = undefined;

/**
 * Date the Quote was initially Created
 * @member {Date} createdDate
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['createdDate'] = undefined;

/**
 * Date the Quote was last updated or modified.
 * @member {Date} lastModifiedDate
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['lastModifiedDate'] = undefined;

/**
 * Date the Quote Expires
 * @member {Date} quoteExpiryDate
 */
QuoteListResponseQuoteSearchResponseQuoteListInner.prototype['quoteExpiryDate'] = undefined;






export default QuoteListResponseQuoteSearchResponseQuoteListInner;

